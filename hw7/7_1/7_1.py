# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
#
# 31    32         3    5    32        3    5    8    3
# 37    43         2    4    6         8    3    7    1
# 51    86        -1   64   -8
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix.
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и т.д.


a = [[1, 3, 1, 8], [9, 3, 2, 1], [8, 0, 8, 2]]
b = [[2, 3, 3, 2], [0, 0, 3, 0], [0, 0, 3, 0]]
c = [[1, 1, 1, 1], [1, 1, 1, 1], [1, 1, 1, 1]]


class Matrix:
    def __init__(self, m):
        """перегрузка базового конструктора"""
        self.matrix = m

    def __str__(self):
        """вывод в матричном виде"""
        return '\n'.join('\t'.join([f'{itm:3}' for itm in line]) for line in self.matrix)

    def __add__(self, other):
        """сложение матриц"""
        if (len(self.matrix) != len(other.matrix)) or (len(self.matrix[0]) != len(other.matrix[0])):
            raise NameError('DifferentMatrixSize')
        else:
            m_new = []
            for i in range(len(self.matrix)):
                m_new.append([])
                for j in range(len(self.matrix[i])):
                    m_new[i].append(self.matrix[i][j] + other.matrix[i][j])
            return Matrix(m_new)


m_1 = Matrix(a)
m_2 = Matrix(b)
m_3 = Matrix(c)
m_4 = m_1 + m_2 + m_3
print(m_4)
